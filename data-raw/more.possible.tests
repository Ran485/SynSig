if (FALSE) {
  GetSAParams <- function() {

    sa.no.hyper <-
      fread("tests/testthat/SignatureAnalyzer_COMPOSITE_SNV.activity.no_POLE_MSI_SKIN_TMZ.031918.txt")

    # Get just the pancreatic adenocarcinomas

    pref <- "Panc_AdenoCA_"

    no.hyper.pa <- grep(pref, names(sa.no.hyper), fixed = TRUE, value = TRUE)


    # Restrict SA working tumours to just non-hyper mutated Panc_AdenoCA

    sa.tumors <- as.data.frame(sa.no.hyper[ , ..no.hyper.pa])
    rownames(sa.tumors) <- unlist(sa.no.hyper[ , 1])
    names(sa.tumors) <- sub("Panc_AdenoCA__", "", names(sa.tumors), fixed = TRUE)

    # Restrict SA working tumours to just non-0 signatures

    sa.tumors <<- sa.tumors[rowSums(sa.tumors) > 0, ]
    dim(sa.tumors)
    rowSums(sa.tumors)

    sa.param <-
      synsig.params.from.attributions(
        sa.tumors,
        target.size = 1)
    stopifnot(sa.param['prob', ] >= 0.1)
    return(sa.param)
  }
  sa.param <- GetSAParams()
  WriteSynSigParams(sa.param, file = OutFile("sa.params.csv"))

  # SigProflier will use this data, and will require
  #  <cancer_type>::<identifier> in column headings
  sa.exposure <-
    generate.synthetic.exposures(sa.param, num.syn.tumors, "Syn_Panc_AdenoCA::SA")
  sa.check.param <-
    synsig.params.from.attributions(
      sa.exposure, # The synthetic exposure
      target.size = 1)
  WriteSynSigParams(sa.check.param, file = OutFile("sa.params.csv"), append = TRUE)

  save(sa.exposure, file = OutFile("sa.exposure.Rdata"))

  sa96.sig <-
    ReadSACat96("SignatureAnalyzer_COMPOSITE_SBS_W96.signature.031918.txt")
  sa96.sig.used <- sa96.sig[ , rownames(sa.exposure)]
  Cat96ToPdf(catalog = sa96.sig.used, name = OutFile("sigs.assigned.by.SA.pdf"), type = "counts")
  WriteCat96(sa96.sig.used, OutFile("sa.sa.96.sigs.used.csv"), strict = TRUE)

}

